#!/bin/bash

cmd=$1
shift

# default stack is the hostname
stack="$(hostname)"

# parse options
while [[ $# -gt 0 ]]; do
	case "$1" in
	-s | --stack)
		stack="$2"
		shift 2
		;;
	*)
		break
		;;
	esac
done

# remaining args are treated as service names
services=("$@")

compose_file="-f docker-compose.$stack.yml"

case "$cmd" in
start)
	echo "ðŸŒ² frst: starting stack '$stack' with services: ${services[*]:-(all)}"
	sudo docker compose "$compose_file" up -d "${services[@]}"
	;;
stop)
	echo "ðŸŒ² frst: stopping stack '$stack' with services: ${services[*]:-(all)}"
	sudo docker compose "$compose_file" down "${services[@]}"
	;;
restart)
	echo "ðŸŒ² frst: restarting stack '$stack' with services: ${services[*]:-(all)}"
	sudo docker compose "$compose_file" down "${services[@]}"
	sudo docker compose "$compose_file" up -d "${services[@]}"
	;;
pull)
	echo "ðŸŒ² frst: pulling images for stack '$stack' with services: ${services[*]:-(all)}"
	sudo docker compose "$compose_file" pull "${services[@]}"
	;;
*)
	echo "usage: $0 {start|stop|restart|pull} [-s|--stack <stack>] [services...]" >&2
	exit 1
	;;
esac
