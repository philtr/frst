#!/bin/bash

cmd=$1
shift

# default stack is the hostname
stack="$(hostname)"

# parse options
while [[ $# -gt 0 ]]; do
	case "$1" in
		-s|--stack)
			stack="$2"
			shift 2
			;;
		*)
			break
			;;
	esac
done

# remaining args are treated as service names
services=("$@")

# compose file args
compose_args=(-f "docker-compose.$stack.yml")

case "$cmd" in
	start)
		echo "ðŸŒ² frst: starting stack '$stack' with services: ${services[*]:-(all)}"
		sudo docker compose "${compose_args[@]}" up -d "${services[@]}"
		;;
	stop)
		echo "ðŸŒ² frst: stopping stack '$stack' with services: ${services[*]:-(all)}"
		sudo docker compose "${compose_args[@]}" down "${services[@]}"
		;;
	restart)
		echo "ðŸŒ² frst: restarting stack '$stack' with services: ${services[*]:-(all)}"
		sudo docker compose "${compose_args[@]}" down "${services[@]}"
		sudo docker compose "${compose_args[@]}" up -d "${services[@]}"
		;;
	pull)
		echo "ðŸŒ² frst: pulling images for stack '$stack' with services: ${services[*]:-(all)}"
		sudo docker compose "${compose_args[@]}" pull "${services[@]}"
		;;
	backup)
		dest="${services[0]}"
		if [[ -z "$dest" ]]; then
			echo "ðŸŒ² frst: error: no rsync destination provided for backup" >&2
			echo "usage: $0 backup <rsync destination>" >&2
			exit 1
		fi
		echo "ðŸŒ² frst: backing up volumes to $dest"
		ts=$(date +"%Y%m%d%H%M%S")
		host=$(hostname)
		filename="frst-${host}-${ts}.zip"
		zip -r "$filename" ./volumes/*
		rsync -av "$filename" "$dest/ðŸŒ²FRST"
		rm "$filename"
		;;
	*)
		echo "usage: $0 {start|stop|restart|pull} [-s|--stack <stack>] [services...]" >&2
		exit 1
		;;
esac
